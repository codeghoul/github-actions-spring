name: The Flow

on:
  push:
    branches:
      - 'master'

jobs:
  build:
    name: Build
    runs-on: [ubuntu-18.04]
    if: "!contains(github.event.head_commit.message, 'ci skip')"
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Cache Gradle packages
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Build with Gradle
        run: ./gradlew clean build -x test
      - name: Upload build files.
        uses: actions/upload-artifact@v1
        with:
          name: build
          path: ./build
  test:
    name: Test
    runs-on: [ubuntu-18.04]
    if: "!contains(github.event.head_commit.message, 'ci skip')"
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Test with Gradle
        run: ./gradlew test
      - name: Test with SonarQube
        run: ./gradlew sonarqube
  deploy:
    name: Deploy
    needs: [build, test]
    runs-on: [ubuntu-18.04]
    if: "!contains(github.event.head_commit.message, 'ci skip')"
    steps:
      - uses: actions/checkout@v2
      - name: Download build files from build
        uses: actions/download-artifact@v1
        with:
          name: build
      - name: Create build/dependency directory
        run: mkdir -p build/dependency && (cd build/dependency; jar -xf ../libs/*.jar)
      - name: Login to Heroku Container Registry
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: heroku container:login
      - name: Build and Push
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: heroku container:push -a ${{ secrets.HEROKU_APP_NAME }} web
      - name: Release
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: heroku container:release -a ${{ secrets.HEROKU_APP_NAME }} web
